<Window x:Class="FCSPlayout.WPFApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FCSPlayout.WPFApp"
        xmlns:prism="http://prismlibrary.com/"     
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mi="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:core="clr-namespace:FCSPlayout.WPF.Core;assembly=FCSPlayout.WPF.Core"
        xmlns:views="clr-namespace:FCSPlayout.WPFApp.Views"
        WindowState="Maximized"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <core:TimeCodeConverter x:Key="TimeCodeConverter"/>
        <Style TargetType="TabItem">
            <Setter Property="Header" Value="{Binding Content.Title,RelativeSource={RelativeSource Mode=Self}}"/>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding PreviewInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <local:PreviewControlWrapper Width="500" Height="400"/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        
        <prism:InteractionRequestTrigger SourceObject="{Binding OpenFileInteractionRequest}">
            <core:PopOpenFileDialogAction/>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding SaveFileInteractionRequest}">
            <core:PopSaveFileDialogAction/>
        </prism:InteractionRequestTrigger>

        <!--<prism:InteractionRequestTrigger SourceObject="{Binding EditMediaItemInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:EditMediaItemView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>-->

        <prism:InteractionRequestTrigger SourceObject="{Binding EditDurationInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <!--<views:EditDurationView/>-->
                    <core:EditDurationView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding EditDateTimeInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <core:DateTimeControl/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <prism:InteractionRequestTrigger SourceObject="{Binding EditCGItemsInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <core:CGItemsView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <!--<prism:InteractionRequestTrigger SourceObject="{Binding AddNullMediaItemInteractionRequest,ElementName=mediaItemListView}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <views:AddNullMediaItemView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>-->

        <!--<prism:InteractionRequestTrigger SourceObject="{Binding AddChannelMediaItemsInteractionRequest,ElementName=mediaItemListView}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <core:AddChannelMediaItemsView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>-->

        <prism:InteractionRequestTrigger SourceObject="{Binding LoadPlaybillInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <core:LoadPlaybillView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        
        <prism:InteractionRequestTrigger SourceObject="{Binding DisplayMessageInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"></prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <!--<prism:InteractionRequestTrigger SourceObject="{Binding ForcePlayRequest,ElementName=playbillView}">
            <prism:InvokeCommandAction Command="{Binding ForcePlayCommand,ElementName=playoutView}" CommandParameter="{Binding Content}"/>
        </prism:InteractionRequestTrigger>-->

        <prism:InteractionRequestTrigger SourceObject="{Binding LoginInteractionRequest}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <core:LoginView/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>

        <i:EventTrigger EventName="Loaded">
            <prism:InvokeCommandAction Command="{Binding LoginCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid  Background="#404040">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.4*"/>
            <ColumnDefinition Width="0.6*"/>
        </Grid.ColumnDefinitions>

        <Menu Grid.ColumnSpan="2">
            <MenuItem Header="文件">
                <MenuItem Header="打开"></MenuItem>
                <MenuItem Header="保存"></MenuItem>
            </MenuItem>
            <MenuItem Header="编辑"></MenuItem>
            <MenuItem Header="设置">
                <MenuItem Header="输出设置..." Name="miRendererSettings" Click="miRendererSettings_Click"></MenuItem>
                <MenuItem Header="格式设置..." Name="miFormatSettings" Click="miFormatSettings_Click"></MenuItem>
                <MenuItem Header="切换器设置..." Name="miSwitcherSettings" Click="miSwitcherSettings_Click"/>
                <MenuItem Header="通道设置..." Name="miChannelSettings" Click="miChannelSettings_Click"/>
                <MenuItem Header="切换器通道设置..." Name="miSwitcherChannelSettings" Click="miSwitcherChannelSettings_Click"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Style="{StaticResource RedCloseButton}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <core:DigitalClock HorizontalAlignment="Center" Margin="0 10" 
                                       TickCommand="{Binding DataContext.CollectGarbageCommand,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}" />
                    <!--<views:PlayoutView Grid.Row="1" x:Name="playoutView" Timer="{Binding DataContext.Timer,Mode=OneWay,RelativeSource={RelativeSource AncestorType=Window,Mode=FindAncestor}}" 
                               Playlist="{Binding Playlist,ElementName=playbillView}" 
                               Log="{Binding ElementName=logView,Path=.}" 
                               SelectedPlayItem="{Binding DataContext.SelectedPlayItem,ElementName=playbillView,Mode=OneWay}"/>-->

                    <ContentControl Margin="0 10 0 0 " Grid.Row="1"  BorderBrush="#D29A00" BorderThickness="1 1 0 1" prism:RegionManager.RegionName="playoutRegion" />
                </Grid>
            </Border>

            <ContentControl Margin="0 10 0 0 " Grid.Row="1"  BorderBrush="#D29A00" BorderThickness="1 1 0 1" prism:RegionManager.RegionName="mainLeftRegion"/>
        </Grid>
        <ContentControl Margin="0 10 0 0 " Grid.Column="1" Grid.Row="1"  BorderBrush="#D29A00" BorderThickness="1 1 0 1" 
                        prism:RegionManager.RegionName="mainRightRegion"/>
    </Grid>
</Window>




















     