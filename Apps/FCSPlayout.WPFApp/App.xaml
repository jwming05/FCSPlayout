<appBase:WPFApplicationBase x:Class="FCSPlayout.WPFApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:appBase="clr-namespace:FCSPlayout.AppInfrastructure;assembly=FCSPlayout.AppInfrastructure"
             xmlns:local="clr-namespace:FCSPlayout.WPFApp">
    <appBase:WPFApplicationBase.Resources>
        <Style x:Key="ControlButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="Button">

            <Style.Triggers>
                <DataTrigger Binding="{Binding Test}" Value="0">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard Name="borderChangStoryboard">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" From="Red" To="Pink" AutoReverse="True" RepeatBehavior="Forever"></ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="borderChangStoryboard"></StopStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        <!--datagrid样式-->
        <Style TargetType="DataGrid">

            <!--网格线颜色-->
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="Background" Value="#404040" />
            <Setter Property="BorderBrush" Value="#131313" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowHeaderWidth" Value="0"/>

            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#363636"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#363636"/>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#D29A00"/>


                </Trigger>
            </Style.Triggers>-->

        </Style>
        <Style x:Key="dataGridMedia" TargetType="DataGrid">

            <!--网格线颜色-->
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="Background" Value="#404040" />
            <Setter Property="BorderBrush" Value="#131313" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowHeaderWidth" Value="0"/>

            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#363636"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#363636"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#D29A00"/>


                </Trigger>
            </Style.Triggers>

        </Style>

        <!--标题栏样式-->
        <!--<Style  TargetType="DataGridColumnHeader" >
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="#474747" />
        <Setter  Property="FontWeight"  Value="Bold"/>
    </Style>-->

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="28" />
            <Setter Property="Foreground" Value="#C9C9C9" />
            <Setter Property="FontSize" Value="15" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="#474747"/>
            <!--<Setter Property="Margin" Value="5"/>-->
            <Setter Property="Height" Value="30"/>

        </Style>
        <!--行样式触发-->
        <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
        <Style  TargetType="DataGridRow">
            <Setter Property="Background" Value="#F2F2F2" />
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="#C9C9C9" />

            <Style.Triggers>
                <!--隔行换色-->
                <Trigger Property="AlternationIndex" Value="0" >
                    <Setter Property="Background" Value="#3B3B3B" />
                </Trigger>
                <Trigger Property="AlternationIndex" Value="1" >
                    <Setter Property="Background" Value="#f2f2f2" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="#c9c9c9"/>
                    <Setter Property="Background" Value="#EE4000"/>

                </Trigger>

            </Style.Triggers>
        </Style>
        <!--单元格内容居中-->

        <!--单元格样式触发-->
        <Style TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <TextBlock TextAlignment="Center" Margin="3" VerticalAlignment="Center">
                           <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


            <!--<Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>-->

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <!--<Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>-->
                    <Setter Property="Foreground" Value="#c9c9c9"/>
                    <Setter Property="Background" Value="#EE4000"/>
                    <Setter Property="BorderBrush" Value="#EE4000"/>

                </Trigger>
            </Style.Triggers>
        </Style>


        <!--datagrid样式-->



        <!--资源库按钮-->
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Transparent"  BorderBrush="Black" BorderThickness="1" Margin="0">

                            <Image Name="ImgBtnBg3" Margin="0,0,0,2" Source="/FCSPlayout.WPFApp;component/Images/AddClip_B.png" Stretch="Fill" Width="20"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="#868686"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/AddClip_A.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Transparent"  BorderBrush="Black" BorderThickness="1" Margin="0">

                            <Image Name="ImgBtnBg3" Margin="0,0,0,2" Source="/FCSPlayout.WPFApp;component/Images/Open_Normal.png" Stretch="Fill" Width="20"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Open_Active.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Transparent"  BorderBrush="Black" BorderThickness="1" Margin="0">

                            <Image Name="ImgBtnBg3" Margin="0,0,0,2" Source="/FCSPlayout.WPFApp;component/Images/Delete_D.png" Stretch="Fill" Width="20"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Delete_C.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Transparent"  BorderBrush="Black" BorderThickness="1" Margin="0">

                            <Image Name="ImgBtnBg3" Margin="0,0,0,2" Source="/FCSPlayout.WPFApp;component/Images/AddPlaylist_B.png" Stretch="Fill" Width="20"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/AddPlaylist_A.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ButtonStyleJzx" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Transparent"  BorderBrush="Black" BorderThickness="1" Margin="0">

                            <Image Name="ImgBtnBg3" Margin="0,0,0,2" Source="/FCSPlayout.WPFApp;component/Images/AddToPlst_Normal.png" Stretch="Fill" Width="20"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/AddToPlst_Active.png" TargetName="ImgBtnBg3"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--播表按钮-->



        <LinearGradientBrush x:Key="borderRed" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#781c12" Offset="0"/>
            <GradientStop Color="#FF0000" Offset="0.93"/>

        </LinearGradientBrush>

        <LinearGradientBrush x:Key="borderGreen" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Green" Offset="0"/>
            <GradientStop Color="#43f50a" Offset="0.93"/>

        </LinearGradientBrush>

        <!--<EventTrigger x:Key="borderjianbian" RoutedEvent="Rectangle.MouseLeftButtonDown">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                Storyboard.TargetName="borderRed"
                Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                From="0.0" To="1.0" Duration="0:0:1.5"
                AutoReverse="True" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>-->

        <!--<ColorAnimation x:Key="Border1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
  BeginTime="00:00:00" From="Black" To="Red"
  Duration="00:00:01" AutoReverse="True" RepeatBehavior="Forever"/>


        <ColorAnimation x:Key="BorderBrush" Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                 BeginTime="00:00:00" From="#781c12" To="#FF0000"
      Duration="00:00:01" AutoReverse="True" RepeatBehavior="Forever"/>-->






        <Style x:Key="ButtonStyleA" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray" BorderThickness="2" Margin="0"  CornerRadius="5">



                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Save_Normal.png" Stretch="Fill" Width="35" />

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Save_Active.png" TargetName="ImgBtnBg3"/>

                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleB" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray"   BorderThickness="2" Margin="0"  CornerRadius="5">

                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Clear_Normal.png" Stretch="Fill" Width="35"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Clear_Active.png" TargetName="ImgBtnBg3"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="ButtonStyleC" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray"  BorderThickness="2" Margin="0"  CornerRadius="5">

                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Apply_Normal.png" Stretch="Fill" Width="35"/>

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Apply_Active.png" TargetName="ImgBtnBg3"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyleD" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray"  BorderThickness="2" Margin="0"  CornerRadius="5">




                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Play_B.png" Stretch="Fill" Width="35"/>

                        </Border>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">

                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Play_giallo.png" TargetName="ImgBtnBg3"/>


                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Play_active4.png" TargetName="ImgBtnBg3"/>
                                <!--<Setter Property="BorderBrush" TargetName="stac" Value="#EE4000"/>-->
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>

                                <!--<Setter Property="BorderBrush" TargetName="stac"  Value="{StaticResource ceshi3}"/>-->

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="ButtonStyleE" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray" BorderThickness="2" Margin="0"  CornerRadius="5" >

                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Pausa_B.png" Stretch="Fill" Width="35"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Play_giallo.png" TargetName="ImgBtnBg3"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>


                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Pausa_A.png" TargetName="ImgBtnBg3"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ButtonStyleJz" TargetType="{x:Type Button}">

            <Setter Property="Template">

                <Setter.Value>

                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="stac" Background="Gray" BorderThickness="2" Margin="0"  CornerRadius="5" >

                            <Image Name="ImgBtnBg3" Margin="5" Source="/FCSPlayout.WPFApp;component/Images/Append_Playlist_Normal.png" Stretch="Fill" Width="35"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="stac" Value="LightGray"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderGreen}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Append_Playlist_Active.png" TargetName="ImgBtnBg3"/>
                                <Setter Property="BorderBrush" TargetName="stac" Value="{StaticResource borderRed}"/>


                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Source" Value="/FCSPlayout.WPFApp;component/Images/Pausa_A.png" TargetName="ImgBtnBg3"/>

                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





        <!--选项卡-->
        <LinearGradientBrush x:Key="CheckedState" StartPoint="0,0" EndPoint="0,1">
            <!--<GradientStop Color="#FFE7E1E1" Offset="0"/>
            <GradientStop Color="black" Offset="1"/>-->
            <GradientStop Color="#781c12" Offset="0"/>
            <GradientStop Color="#ed230c" Offset="0.93"/>
            <!--<GradientStop Color="gray" Offset="0.581"/>-->
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="UnCheckedState" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFE7E1E1" Offset="0"/>
            <GradientStop Color="gray" Offset="1"/>
            <GradientStop Color="gray" Offset="0.581"/>
        </LinearGradientBrush>






        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#131313" />
        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />


        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#CCC" />

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border 
              Name="Border" 
              Grid.Row="1" 
              Background="#404040" 
              BorderBrush="{StaticResource SolidBorderBrush}" 
              BorderThickness="1" 
              CornerRadius="2" 
              KeyboardNavigation.TabNavigation="Local"
              KeyboardNavigation.DirectionalNavigation="Contained"
              KeyboardNavigation.TabIndex="2" >
                                <ContentPresenter 
                Name="PART_SelectedContentHost"
                Margin="4"
                ContentSource="SelectedContent" />
                            </Border>
                            <TabPanel 
              Name="HeaderPanel"
              Grid.Row="0"
              Margin="1,0,0,0" 
              IsItemsHost="True"
              KeyboardNavigation.TabIndex="1"
              Background="Transparent" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="True">

                                <Setter Property="BorderBrush" TargetName="Border" Value="#D29A00"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border 
            Name="Border"
            Margin="0,0,0,0" 
            Background="#313131"
            BorderBrush="#0D0D0D" 
            BorderThickness="1,1,1,0" 
            CornerRadius="0,0,0,0" >
                                <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="12,2,12,2"
              RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#4B4B4B" />
                                <!--<Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,-1" />-->
                                <Setter TargetName="Border" Property="Margin" Value="1,1,1,-1" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#D29A00" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <!--<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#D29A00" />-->
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="RedCloseButton" TargetType="Border">
            <Setter Property="BorderBrush" Value="#131313"/>
            <Setter Property="BorderThickness" Value="1 1 0 1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#D29A00"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!--<Style TargetType="{x:Type TabItem}">
          
            <Setter Property="Template">
                <Setter.Value>
                  
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="#313131" BorderBrush="#0D0D0D" BorderThickness="1,1,1,0" >
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#4B4B4B" />
                                <Setter Property="BorderBrush" TargetName="Border" Value="#D29A00"/>
                            </Trigger>
                        
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--滚动条-->
        <!--<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
          x:Name="Border"
          Margin="1" 
          CornerRadius="0" 
          Background="#373737"
          BorderBrush="#060606"
          BorderThickness="1">
                            <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="#373737"
            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#c9c9c9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#373737" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border 
          CornerRadius="0"
          BorderThickness="1" Background="#404040" BorderBrush="#060606" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0" Width="Auto" >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" Height="0.409*"/>
                    <RowDefinition Height="0.182*"/>
                    <RowDefinition MaxHeight="18" Height="0.409*"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="#404040" Margin="15,22,15,22" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="10"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" Margin="10,0,10,0" />
                <Track 
      x:Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="10,0,10,0"  
          Background="#404040"
          BorderBrush="#373737" Height="Auto" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="8" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
                       
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z" Margin="10,0,10,0"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="#FF3B3B3B" Margin="22,15,22,15" />
                <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" Margin="0,10,0,10" />
                <Track 
      x:Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,10,0,10"  
          Background="#C0C0C0"
          BorderBrush="#404040" Height="8" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
         Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z" Margin="0,10,0,10"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <SolidColorBrush x:Key="StandardBorderBrush" Color="#404040" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#373737" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />

        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />

        <SolidColorBrush x:Key="NormalBrush" Color="#404040" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#060606" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#404040" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#404040" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="#313131"
          BorderBrush="Black"
          BorderThickness="1">
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, {StaticResource DisabledForegroundBrush}
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
          CornerRadius="2"
          Background="#404040"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
      CornerRadius="2"
      Background="#373737" />
                <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#373737" />
                <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar  1-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>



        <!--呼吸灯闪烁-->

        <Style x:Key="OuterGlowStyle" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect x:Name="OG" BlurRadius="0" Color="red" Direction="0"  
 Opacity="0.6" RenderingBias="Performance" ShadowDepth="0">
                        <Storyboard.TargetProperty>
                            BlurRadius
                        </Storyboard.TargetProperty>
                    </DropShadowEffect>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="GotFocus">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Effect).  
(DropShadowEffect.BlurRadius)" BeginTime="00:00:00" From="0" To="10" Duration="00:00:01" AutoReverse="True"   
RepeatBehavior="Forever"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>



        <!--按钮样式-->
        <LinearGradientBrush x:Key="LinearGradientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#3B3B3B" Offset="0" />
            <GradientStop Color="#404040" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MyBtnBorderColor" Color="Black"></SolidColorBrush>
        <SolidColorBrush x:Key="MyBtnHoverBackgroundColor" Color="#868686"></SolidColorBrush>
        <Style x:Key="PlayButton" TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground}"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor}"></Setter>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor}"/>
                            </Trigger>
                        
                         
                            <Trigger Property="IsEnabled" Value="false">

                                <Setter Property="Foreground" Value="{StaticResource borderRed}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource borderRed}"/>

                               

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type Button}" >
            <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground}"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor}"></Setter>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor}"/>
                            </Trigger>


                         
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--按钮样式-->
    </appBase:WPFApplicationBase.Resources>
</appBase:WPFApplicationBase>
