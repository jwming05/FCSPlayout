<core:ViewBase x:Class="FCSPlayout.WPFApp.Views.MediaItemListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mi="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:local="clr-namespace:FCSPlayout.WPFApp.Views"
             xmlns:core="clr-namespace:FCSPlayout.WPF.Core;assembly=FCSPlayout.WPF.Core"  
             xmlns:code="clr-namespace:FCSPlayout.MediaFileImporter"
             xmlns:entities="clr-namespace:FCSPlayout.Entities;assembly=FCSPlayout.Entities"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             x:Name="mediaItemListView"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <core:ViewBase.Resources>
        <core:TimeCodeConverter x:Key="TimeCodeConverter"/>
        <code:MediaFileCategoryConverter x:Key="MediaFileCategoryConverter"/>
        <code:MediaFileChannelConverter x:Key="MediaFileChannelConverter"/>
        <!--<common:ConvertItemToIndex x:Key="IndexConverter"/>-->
      
    </core:ViewBase.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MediaItemDoubleClicked" SourceObject="{Binding RelativeSource={RelativeSource AncestorType=core:ViewBase,Mode=FindAncestor}}">
            <core:CustomInvokeCommandAction Command="{Binding EditMediaItemCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <DataGrid Name="dgMediaItem" AutoGenerateColumns="False"
                  ContextMenuOpening="dgMediaItem_ContextMenuOpening"
                  ContextMenuClosing="dgMediaItem_ContextMenuClosing"
                  ItemsSource="{Binding MediaItemView}" SelectionMode="Single"
                  IsReadOnly="False"
                  SelectedItem="{Binding SelectedMediaItem,Mode=TwoWay}"
                  >
            <!--MouseDoubleClick="dgMediaItem_MouseDoubleClick"-->
            <!--<DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Content" Value="{Binding Converter={StaticResource IndexConverter},ConverterParameter=dgMediaItem}" />
                </Style>
            </DataGrid.RowHeaderStyle>-->
           
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="缩略图" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <code:MediaFileImageControl MediaFileItem="{Binding}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding PreviewCommand,RelativeSource={RelativeSource AncestorType=core:ViewBase,Mode=FindAncestor}}"
                                                               CommandParameter="{Binding}"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </code:MediaFileImageControl>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Binding="{Binding OriginalFileName}" Header="文件名" IsReadOnly="True" />
                <DataGridTextColumn Binding="{Binding Title}" Header="素材标题"/>

                <DataGridTextColumn Binding="{Binding StartPosition, Converter={StaticResource TimeCodeConverter}}" Header="入点" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding StopPosition, Converter={StaticResource TimeCodeConverter}}" Header="出点" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding PlayDuration, Converter={StaticResource TimeCodeConverter}}" Header="播放时长" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding Duration, Converter={StaticResource TimeCodeConverter}}" Header="总时长" IsReadOnly="True"/>
                <DataGridComboBoxColumn Header="节目类型"
                                        ItemsSource="{x:Static entities:PlayoutRepository.MediaFileCategories}" 
                                        SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValueBinding="{Binding MediaFileCategoryId}"/>
                <DataGridComboBoxColumn Header="频道类型"
                                        ItemsSource="{x:Static entities:PlayoutRepository.MediaFileChannels}"
                                        SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValueBinding="{Binding MediaFileChannelId}"/>
                <DataGridTemplateColumn Header="音频增益">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding AudioGain}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <xctk:IntegerUpDown Value="{Binding AudioGain}" Minimum="-60" Maximum="60"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Binding="{Binding CreationTime,StringFormat='{}{0:yyyy-MM-dd HH:mm:ss}'}" Header="日期" />-->
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</core:ViewBase>
